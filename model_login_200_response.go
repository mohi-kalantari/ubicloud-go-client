/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Login200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Login200Response{}

// Login200Response struct for Login200Response
type Login200Response struct {
	Success string `json:"success"`
}

// NewLogin200Response instantiates a new Login200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogin200Response(success string) *Login200Response {
	this := Login200Response{}
	this.Success = success
	return &this
}

// NewLogin200ResponseWithDefaults instantiates a new Login200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogin200ResponseWithDefaults() *Login200Response {
	this := Login200Response{}
	return &this
}

// GetSuccess returns the Success field value
func (o *Login200Response) GetSuccess() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *Login200Response) GetSuccessOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *Login200Response) SetSuccess(v string) {
	o.Success = v
}

func (o Login200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Login200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["success"] = o.Success
	return toSerialize, nil
}

type NullableLogin200Response struct {
	value *Login200Response
	isSet bool
}

func (v NullableLogin200Response) Get() *Login200Response {
	return v.value
}

func (v *NullableLogin200Response) Set(val *Login200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLogin200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLogin200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogin200Response(val *Login200Response) *NullableLogin200Response {
	return &NullableLogin200Response{value: val, isSet: true}
}

func (v NullableLogin200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogin200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


