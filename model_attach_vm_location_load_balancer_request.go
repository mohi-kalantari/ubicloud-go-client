/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AttachVmLocationLoadBalancerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachVmLocationLoadBalancerRequest{}

// AttachVmLocationLoadBalancerRequest struct for AttachVmLocationLoadBalancerRequest
type AttachVmLocationLoadBalancerRequest struct {
	// Apid of VM to attach to Load Balancer
	VmId string `json:"vm_id"`
}

// NewAttachVmLocationLoadBalancerRequest instantiates a new AttachVmLocationLoadBalancerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachVmLocationLoadBalancerRequest(vmId string) *AttachVmLocationLoadBalancerRequest {
	this := AttachVmLocationLoadBalancerRequest{}
	this.VmId = vmId
	return &this
}

// NewAttachVmLocationLoadBalancerRequestWithDefaults instantiates a new AttachVmLocationLoadBalancerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachVmLocationLoadBalancerRequestWithDefaults() *AttachVmLocationLoadBalancerRequest {
	this := AttachVmLocationLoadBalancerRequest{}
	return &this
}

// GetVmId returns the VmId field value
func (o *AttachVmLocationLoadBalancerRequest) GetVmId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value
// and a boolean to check if the value has been set.
func (o *AttachVmLocationLoadBalancerRequest) GetVmIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmId, true
}

// SetVmId sets field value
func (o *AttachVmLocationLoadBalancerRequest) SetVmId(v string) {
	o.VmId = v
}

func (o AttachVmLocationLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachVmLocationLoadBalancerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vm_id"] = o.VmId
	return toSerialize, nil
}

type NullableAttachVmLocationLoadBalancerRequest struct {
	value *AttachVmLocationLoadBalancerRequest
	isSet bool
}

func (v NullableAttachVmLocationLoadBalancerRequest) Get() *AttachVmLocationLoadBalancerRequest {
	return v.value
}

func (v *NullableAttachVmLocationLoadBalancerRequest) Set(val *AttachVmLocationLoadBalancerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachVmLocationLoadBalancerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachVmLocationLoadBalancerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachVmLocationLoadBalancerRequest(val *AttachVmLocationLoadBalancerRequest) *NullableAttachVmLocationLoadBalancerRequest {
	return &NullableAttachVmLocationLoadBalancerRequest{value: val, isSet: true}
}

func (v NullableAttachVmLocationLoadBalancerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachVmLocationLoadBalancerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


