/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Firewall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Firewall{}

// Firewall struct for Firewall
type Firewall struct {
	// Description of the firewall
	Description string `json:"description"`
	// List of firewall rules
	FirewallRules []FirewallRule `json:"firewall_rules"`
	// ID of the firewall
	Id string `json:"id"`
	// Location of the the firewall
	Location string `json:"location"`
	// Name of the firewall
	Name string `json:"name"`
}

// NewFirewall instantiates a new Firewall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewall(description string, firewallRules []FirewallRule, id string, location string, name string) *Firewall {
	this := Firewall{}
	this.Description = description
	this.FirewallRules = firewallRules
	this.Id = id
	this.Location = location
	this.Name = name
	return &this
}

// NewFirewallWithDefaults instantiates a new Firewall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallWithDefaults() *Firewall {
	this := Firewall{}
	return &this
}

// GetDescription returns the Description field value
func (o *Firewall) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Firewall) SetDescription(v string) {
	o.Description = v
}

// GetFirewallRules returns the FirewallRules field value
func (o *Firewall) GetFirewallRules() []FirewallRule {
	if o == nil {
		var ret []FirewallRule
		return ret
	}

	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirewallRules, true
}

// SetFirewallRules sets field value
func (o *Firewall) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetId returns the Id field value
func (o *Firewall) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Firewall) SetId(v string) {
	o.Id = v
}

// GetLocation returns the Location field value
func (o *Firewall) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *Firewall) SetLocation(v string) {
	o.Location = v
}

// GetName returns the Name field value
func (o *Firewall) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Firewall) SetName(v string) {
	o.Name = v
}

func (o Firewall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Firewall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["firewall_rules"] = o.FirewallRules
	toSerialize["id"] = o.Id
	toSerialize["location"] = o.Location
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableFirewall struct {
	value *Firewall
	isSet bool
}

func (v NullableFirewall) Get() *Firewall {
	return v.value
}

func (v *NullableFirewall) Set(val *Firewall) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewall) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewall(val *Firewall) *NullableFirewall {
	return &NullableFirewall{value: val, isSet: true}
}

func (v NullableFirewall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


