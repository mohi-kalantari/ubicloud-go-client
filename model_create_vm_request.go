/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateVMRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVMRequest{}

// CreateVMRequest struct for CreateVMRequest
type CreateVMRequest struct {
	// Boot image of the VM
	BootImage *string `json:"boot_image,omitempty"`
	// Enable IPv4
	EnableIp4 *bool `json:"enable_ip4,omitempty"`
	// ID of the private subnet
	PrivateSubnetId *string `json:"private_subnet_id,omitempty"`
	// Public SSH key for the VM
	PublicKey string `json:"public_key"`
	// Size of the VM
	Size *string `json:"size,omitempty"`
	// Requested storage size in GiB
	StorageSize *int32 `json:"storage_size,omitempty"`
	// Unix user of the VM
	UnixUser *string `json:"unix_user,omitempty"`
}

// NewCreateVMRequest instantiates a new CreateVMRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVMRequest(publicKey string) *CreateVMRequest {
	this := CreateVMRequest{}
	this.PublicKey = publicKey
	return &this
}

// NewCreateVMRequestWithDefaults instantiates a new CreateVMRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVMRequestWithDefaults() *CreateVMRequest {
	this := CreateVMRequest{}
	return &this
}

// GetBootImage returns the BootImage field value if set, zero value otherwise.
func (o *CreateVMRequest) GetBootImage() string {
	if o == nil || IsNil(o.BootImage) {
		var ret string
		return ret
	}
	return *o.BootImage
}

// GetBootImageOk returns a tuple with the BootImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequest) GetBootImageOk() (*string, bool) {
	if o == nil || IsNil(o.BootImage) {
		return nil, false
	}
	return o.BootImage, true
}

// HasBootImage returns a boolean if a field has been set.
func (o *CreateVMRequest) HasBootImage() bool {
	if o != nil && !IsNil(o.BootImage) {
		return true
	}

	return false
}

// SetBootImage gets a reference to the given string and assigns it to the BootImage field.
func (o *CreateVMRequest) SetBootImage(v string) {
	o.BootImage = &v
}

// GetEnableIp4 returns the EnableIp4 field value if set, zero value otherwise.
func (o *CreateVMRequest) GetEnableIp4() bool {
	if o == nil || IsNil(o.EnableIp4) {
		var ret bool
		return ret
	}
	return *o.EnableIp4
}

// GetEnableIp4Ok returns a tuple with the EnableIp4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequest) GetEnableIp4Ok() (*bool, bool) {
	if o == nil || IsNil(o.EnableIp4) {
		return nil, false
	}
	return o.EnableIp4, true
}

// HasEnableIp4 returns a boolean if a field has been set.
func (o *CreateVMRequest) HasEnableIp4() bool {
	if o != nil && !IsNil(o.EnableIp4) {
		return true
	}

	return false
}

// SetEnableIp4 gets a reference to the given bool and assigns it to the EnableIp4 field.
func (o *CreateVMRequest) SetEnableIp4(v bool) {
	o.EnableIp4 = &v
}

// GetPrivateSubnetId returns the PrivateSubnetId field value if set, zero value otherwise.
func (o *CreateVMRequest) GetPrivateSubnetId() string {
	if o == nil || IsNil(o.PrivateSubnetId) {
		var ret string
		return ret
	}
	return *o.PrivateSubnetId
}

// GetPrivateSubnetIdOk returns a tuple with the PrivateSubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequest) GetPrivateSubnetIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateSubnetId) {
		return nil, false
	}
	return o.PrivateSubnetId, true
}

// HasPrivateSubnetId returns a boolean if a field has been set.
func (o *CreateVMRequest) HasPrivateSubnetId() bool {
	if o != nil && !IsNil(o.PrivateSubnetId) {
		return true
	}

	return false
}

// SetPrivateSubnetId gets a reference to the given string and assigns it to the PrivateSubnetId field.
func (o *CreateVMRequest) SetPrivateSubnetId(v string) {
	o.PrivateSubnetId = &v
}

// GetPublicKey returns the PublicKey field value
func (o *CreateVMRequest) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *CreateVMRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *CreateVMRequest) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateVMRequest) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequest) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateVMRequest) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *CreateVMRequest) SetSize(v string) {
	o.Size = &v
}

// GetStorageSize returns the StorageSize field value if set, zero value otherwise.
func (o *CreateVMRequest) GetStorageSize() int32 {
	if o == nil || IsNil(o.StorageSize) {
		var ret int32
		return ret
	}
	return *o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequest) GetStorageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.StorageSize) {
		return nil, false
	}
	return o.StorageSize, true
}

// HasStorageSize returns a boolean if a field has been set.
func (o *CreateVMRequest) HasStorageSize() bool {
	if o != nil && !IsNil(o.StorageSize) {
		return true
	}

	return false
}

// SetStorageSize gets a reference to the given int32 and assigns it to the StorageSize field.
func (o *CreateVMRequest) SetStorageSize(v int32) {
	o.StorageSize = &v
}

// GetUnixUser returns the UnixUser field value if set, zero value otherwise.
func (o *CreateVMRequest) GetUnixUser() string {
	if o == nil || IsNil(o.UnixUser) {
		var ret string
		return ret
	}
	return *o.UnixUser
}

// GetUnixUserOk returns a tuple with the UnixUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMRequest) GetUnixUserOk() (*string, bool) {
	if o == nil || IsNil(o.UnixUser) {
		return nil, false
	}
	return o.UnixUser, true
}

// HasUnixUser returns a boolean if a field has been set.
func (o *CreateVMRequest) HasUnixUser() bool {
	if o != nil && !IsNil(o.UnixUser) {
		return true
	}

	return false
}

// SetUnixUser gets a reference to the given string and assigns it to the UnixUser field.
func (o *CreateVMRequest) SetUnixUser(v string) {
	o.UnixUser = &v
}

func (o CreateVMRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVMRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BootImage) {
		toSerialize["boot_image"] = o.BootImage
	}
	if !IsNil(o.EnableIp4) {
		toSerialize["enable_ip4"] = o.EnableIp4
	}
	if !IsNil(o.PrivateSubnetId) {
		toSerialize["private_subnet_id"] = o.PrivateSubnetId
	}
	toSerialize["public_key"] = o.PublicKey
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.StorageSize) {
		toSerialize["storage_size"] = o.StorageSize
	}
	if !IsNil(o.UnixUser) {
		toSerialize["unix_user"] = o.UnixUser
	}
	return toSerialize, nil
}

type NullableCreateVMRequest struct {
	value *CreateVMRequest
	isSet bool
}

func (v NullableCreateVMRequest) Get() *CreateVMRequest {
	return v.value
}

func (v *NullableCreateVMRequest) Set(val *CreateVMRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVMRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVMRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVMRequest(val *CreateVMRequest) *NullableCreateVMRequest {
	return &NullableCreateVMRequest{value: val, isSet: true}
}

func (v NullableCreateVMRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVMRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


