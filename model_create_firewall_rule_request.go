/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateFirewallRuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFirewallRuleRequest{}

// CreateFirewallRuleRequest struct for CreateFirewallRuleRequest
type CreateFirewallRuleRequest struct {
	// CIDR of the firewall rule
	Cidr string `json:"cidr"`
	FirewallId *string `json:"firewall_id,omitempty"`
	// Port range of the firewall rule
	PortRange *string `json:"port_range,omitempty"`
	ProjectId *string `json:"project_id,omitempty"`
}

// NewCreateFirewallRuleRequest instantiates a new CreateFirewallRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFirewallRuleRequest(cidr string) *CreateFirewallRuleRequest {
	this := CreateFirewallRuleRequest{}
	this.Cidr = cidr
	return &this
}

// NewCreateFirewallRuleRequestWithDefaults instantiates a new CreateFirewallRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFirewallRuleRequestWithDefaults() *CreateFirewallRuleRequest {
	this := CreateFirewallRuleRequest{}
	return &this
}

// GetCidr returns the Cidr field value
func (o *CreateFirewallRuleRequest) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleRequest) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *CreateFirewallRuleRequest) SetCidr(v string) {
	o.Cidr = v
}

// GetFirewallId returns the FirewallId field value if set, zero value otherwise.
func (o *CreateFirewallRuleRequest) GetFirewallId() string {
	if o == nil || IsNil(o.FirewallId) {
		var ret string
		return ret
	}
	return *o.FirewallId
}

// GetFirewallIdOk returns a tuple with the FirewallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleRequest) GetFirewallIdOk() (*string, bool) {
	if o == nil || IsNil(o.FirewallId) {
		return nil, false
	}
	return o.FirewallId, true
}

// HasFirewallId returns a boolean if a field has been set.
func (o *CreateFirewallRuleRequest) HasFirewallId() bool {
	if o != nil && !IsNil(o.FirewallId) {
		return true
	}

	return false
}

// SetFirewallId gets a reference to the given string and assigns it to the FirewallId field.
func (o *CreateFirewallRuleRequest) SetFirewallId(v string) {
	o.FirewallId = &v
}

// GetPortRange returns the PortRange field value if set, zero value otherwise.
func (o *CreateFirewallRuleRequest) GetPortRange() string {
	if o == nil || IsNil(o.PortRange) {
		var ret string
		return ret
	}
	return *o.PortRange
}

// GetPortRangeOk returns a tuple with the PortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleRequest) GetPortRangeOk() (*string, bool) {
	if o == nil || IsNil(o.PortRange) {
		return nil, false
	}
	return o.PortRange, true
}

// HasPortRange returns a boolean if a field has been set.
func (o *CreateFirewallRuleRequest) HasPortRange() bool {
	if o != nil && !IsNil(o.PortRange) {
		return true
	}

	return false
}

// SetPortRange gets a reference to the given string and assigns it to the PortRange field.
func (o *CreateFirewallRuleRequest) SetPortRange(v string) {
	o.PortRange = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateFirewallRuleRequest) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateFirewallRuleRequest) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateFirewallRuleRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

func (o CreateFirewallRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFirewallRuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cidr"] = o.Cidr
	if !IsNil(o.FirewallId) {
		toSerialize["firewall_id"] = o.FirewallId
	}
	if !IsNil(o.PortRange) {
		toSerialize["port_range"] = o.PortRange
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	return toSerialize, nil
}

type NullableCreateFirewallRuleRequest struct {
	value *CreateFirewallRuleRequest
	isSet bool
}

func (v NullableCreateFirewallRuleRequest) Get() *CreateFirewallRuleRequest {
	return v.value
}

func (v *NullableCreateFirewallRuleRequest) Set(val *CreateFirewallRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFirewallRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFirewallRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFirewallRuleRequest(val *CreateFirewallRuleRequest) *NullableCreateFirewallRuleRequest {
	return &NullableCreateFirewallRuleRequest{value: val, isSet: true}
}

func (v NullableCreateFirewallRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFirewallRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


