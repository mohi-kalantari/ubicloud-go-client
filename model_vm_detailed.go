/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VmDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VmDetailed{}

// VmDetailed struct for VmDetailed
type VmDetailed struct {
	// ID of the VM
	Id string `json:"id"`
	// IPv4 address
	Ip4 NullableString `json:"ip4"`
	// IPv6 address
	Ip6 NullableString `json:"ip6"`
	// Location of the VM
	Location string `json:"location"`
	// Name of the VM
	Name string `json:"name"`
	// Size of the underlying VM
	Size string `json:"size"`
	// State of the VM
	State string `json:"state"`
	// Storage size in GiB
	StorageSizeGib int32 `json:"storage_size_gib"`
	// Unix user of the VM
	UnixUser string `json:"unix_user"`
	// List of firewalls
	Firewalls []Firewall `json:"firewalls"`
	// Private IPv4 address
	PrivateIpv4 string `json:"private_ipv4"`
	// Private IPv6 address
	PrivateIpv6 string `json:"private_ipv6"`
	// Subnet of the VM
	Subnet string `json:"subnet"`
}

// NewVmDetailed instantiates a new VmDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmDetailed(id string, ip4 NullableString, ip6 NullableString, location string, name string, size string, state string, storageSizeGib int32, unixUser string, firewalls []Firewall, privateIpv4 string, privateIpv6 string, subnet string) *VmDetailed {
	this := VmDetailed{}
	this.Id = id
	this.Ip4 = ip4
	this.Ip6 = ip6
	this.Location = location
	this.Name = name
	this.Size = size
	this.State = state
	this.StorageSizeGib = storageSizeGib
	this.UnixUser = unixUser
	this.Firewalls = firewalls
	this.PrivateIpv4 = privateIpv4
	this.PrivateIpv6 = privateIpv6
	this.Subnet = subnet
	return &this
}

// NewVmDetailedWithDefaults instantiates a new VmDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmDetailedWithDefaults() *VmDetailed {
	this := VmDetailed{}
	return &this
}

// GetId returns the Id field value
func (o *VmDetailed) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VmDetailed) SetId(v string) {
	o.Id = v
}

// GetIp4 returns the Ip4 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *VmDetailed) GetIp4() string {
	if o == nil || o.Ip4.Get() == nil {
		var ret string
		return ret
	}

	return *o.Ip4.Get()
}

// GetIp4Ok returns a tuple with the Ip4 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmDetailed) GetIp4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip4.Get(), o.Ip4.IsSet()
}

// SetIp4 sets field value
func (o *VmDetailed) SetIp4(v string) {
	o.Ip4.Set(&v)
}

// GetIp6 returns the Ip6 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *VmDetailed) GetIp6() string {
	if o == nil || o.Ip6.Get() == nil {
		var ret string
		return ret
	}

	return *o.Ip6.Get()
}

// GetIp6Ok returns a tuple with the Ip6 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VmDetailed) GetIp6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip6.Get(), o.Ip6.IsSet()
}

// SetIp6 sets field value
func (o *VmDetailed) SetIp6(v string) {
	o.Ip6.Set(&v)
}

// GetLocation returns the Location field value
func (o *VmDetailed) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *VmDetailed) SetLocation(v string) {
	o.Location = v
}

// GetName returns the Name field value
func (o *VmDetailed) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VmDetailed) SetName(v string) {
	o.Name = v
}

// GetSize returns the Size field value
func (o *VmDetailed) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *VmDetailed) SetSize(v string) {
	o.Size = v
}

// GetState returns the State field value
func (o *VmDetailed) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *VmDetailed) SetState(v string) {
	o.State = v
}

// GetStorageSizeGib returns the StorageSizeGib field value
func (o *VmDetailed) GetStorageSizeGib() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageSizeGib
}

// GetStorageSizeGibOk returns a tuple with the StorageSizeGib field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetStorageSizeGibOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSizeGib, true
}

// SetStorageSizeGib sets field value
func (o *VmDetailed) SetStorageSizeGib(v int32) {
	o.StorageSizeGib = v
}

// GetUnixUser returns the UnixUser field value
func (o *VmDetailed) GetUnixUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnixUser
}

// GetUnixUserOk returns a tuple with the UnixUser field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetUnixUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnixUser, true
}

// SetUnixUser sets field value
func (o *VmDetailed) SetUnixUser(v string) {
	o.UnixUser = v
}

// GetFirewalls returns the Firewalls field value
func (o *VmDetailed) GetFirewalls() []Firewall {
	if o == nil {
		var ret []Firewall
		return ret
	}

	return o.Firewalls
}

// GetFirewallsOk returns a tuple with the Firewalls field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetFirewallsOk() ([]Firewall, bool) {
	if o == nil {
		return nil, false
	}
	return o.Firewalls, true
}

// SetFirewalls sets field value
func (o *VmDetailed) SetFirewalls(v []Firewall) {
	o.Firewalls = v
}

// GetPrivateIpv4 returns the PrivateIpv4 field value
func (o *VmDetailed) GetPrivateIpv4() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateIpv4
}

// GetPrivateIpv4Ok returns a tuple with the PrivateIpv4 field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetPrivateIpv4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateIpv4, true
}

// SetPrivateIpv4 sets field value
func (o *VmDetailed) SetPrivateIpv4(v string) {
	o.PrivateIpv4 = v
}

// GetPrivateIpv6 returns the PrivateIpv6 field value
func (o *VmDetailed) GetPrivateIpv6() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateIpv6
}

// GetPrivateIpv6Ok returns a tuple with the PrivateIpv6 field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetPrivateIpv6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateIpv6, true
}

// SetPrivateIpv6 sets field value
func (o *VmDetailed) SetPrivateIpv6(v string) {
	o.PrivateIpv6 = v
}

// GetSubnet returns the Subnet field value
func (o *VmDetailed) GetSubnet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value
// and a boolean to check if the value has been set.
func (o *VmDetailed) GetSubnetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subnet, true
}

// SetSubnet sets field value
func (o *VmDetailed) SetSubnet(v string) {
	o.Subnet = v
}

func (o VmDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VmDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["ip4"] = o.Ip4.Get()
	toSerialize["ip6"] = o.Ip6.Get()
	toSerialize["location"] = o.Location
	toSerialize["name"] = o.Name
	toSerialize["size"] = o.Size
	toSerialize["state"] = o.State
	toSerialize["storage_size_gib"] = o.StorageSizeGib
	toSerialize["unix_user"] = o.UnixUser
	toSerialize["firewalls"] = o.Firewalls
	toSerialize["private_ipv4"] = o.PrivateIpv4
	toSerialize["private_ipv6"] = o.PrivateIpv6
	toSerialize["subnet"] = o.Subnet
	return toSerialize, nil
}

type NullableVmDetailed struct {
	value *VmDetailed
	isSet bool
}

func (v NullableVmDetailed) Get() *VmDetailed {
	return v.value
}

func (v *NullableVmDetailed) Set(val *VmDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableVmDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableVmDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmDetailed(val *VmDetailed) *NullableVmDetailed {
	return &NullableVmDetailed{value: val, isSet: true}
}

func (v NullableVmDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


