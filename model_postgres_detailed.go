/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostgresDetailed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostgresDetailed{}

// PostgresDetailed struct for PostgresDetailed
type PostgresDetailed struct {
	// Kind of Postgres database
	Flavor string `json:"flavor"`
	// High availability type
	HaType string `json:"ha_type"`
	// ID of the Postgres database
	Id string `json:"id"`
	// Location of the Postgres database
	Location string `json:"location"`
	// Name of the Postgres database
	Name string `json:"name"`
	// State of the Postgres database
	State string `json:"state"`
	// Storage size in GiB
	StorageSizeGib int32 `json:"storage_size_gib"`
	// Postgres version
	Version string `json:"version"`
	// Size of the underlying VM
	VmSize string `json:"vm_size"`
	// Connection string to the Postgres database
	ConnectionString NullableString `json:"connection_string"`
	// Earliest restore time (if primary)
	EarliestRestoreTime NullableString `json:"earliest_restore_time"`
	// List of Postgres firewall rules
	FirewallRules []PostgresFirewallRule `json:"firewall_rules"`
	// Latest restore time (if primary)\"
	LatestRestoreTime string `json:"latest_restore_time"`
	// Is the database primary
	Primary bool `json:"primary"`
}

// NewPostgresDetailed instantiates a new PostgresDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresDetailed(flavor string, haType string, id string, location string, name string, state string, storageSizeGib int32, version string, vmSize string, connectionString NullableString, earliestRestoreTime NullableString, firewallRules []PostgresFirewallRule, latestRestoreTime string, primary bool) *PostgresDetailed {
	this := PostgresDetailed{}
	this.Flavor = flavor
	this.HaType = haType
	this.Id = id
	this.Location = location
	this.Name = name
	this.State = state
	this.StorageSizeGib = storageSizeGib
	this.Version = version
	this.VmSize = vmSize
	this.ConnectionString = connectionString
	this.EarliestRestoreTime = earliestRestoreTime
	this.FirewallRules = firewallRules
	this.LatestRestoreTime = latestRestoreTime
	this.Primary = primary
	return &this
}

// NewPostgresDetailedWithDefaults instantiates a new PostgresDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresDetailedWithDefaults() *PostgresDetailed {
	this := PostgresDetailed{}
	return &this
}

// GetFlavor returns the Flavor field value
func (o *PostgresDetailed) GetFlavor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetFlavorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flavor, true
}

// SetFlavor sets field value
func (o *PostgresDetailed) SetFlavor(v string) {
	o.Flavor = v
}

// GetHaType returns the HaType field value
func (o *PostgresDetailed) GetHaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HaType
}

// GetHaTypeOk returns a tuple with the HaType field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetHaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HaType, true
}

// SetHaType sets field value
func (o *PostgresDetailed) SetHaType(v string) {
	o.HaType = v
}

// GetId returns the Id field value
func (o *PostgresDetailed) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PostgresDetailed) SetId(v string) {
	o.Id = v
}

// GetLocation returns the Location field value
func (o *PostgresDetailed) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *PostgresDetailed) SetLocation(v string) {
	o.Location = v
}

// GetName returns the Name field value
func (o *PostgresDetailed) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostgresDetailed) SetName(v string) {
	o.Name = v
}

// GetState returns the State field value
func (o *PostgresDetailed) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PostgresDetailed) SetState(v string) {
	o.State = v
}

// GetStorageSizeGib returns the StorageSizeGib field value
func (o *PostgresDetailed) GetStorageSizeGib() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageSizeGib
}

// GetStorageSizeGibOk returns a tuple with the StorageSizeGib field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetStorageSizeGibOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSizeGib, true
}

// SetStorageSizeGib sets field value
func (o *PostgresDetailed) SetStorageSizeGib(v int32) {
	o.StorageSizeGib = v
}

// GetVersion returns the Version field value
func (o *PostgresDetailed) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *PostgresDetailed) SetVersion(v string) {
	o.Version = v
}

// GetVmSize returns the VmSize field value
func (o *PostgresDetailed) GetVmSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmSize
}

// GetVmSizeOk returns a tuple with the VmSize field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetVmSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmSize, true
}

// SetVmSize sets field value
func (o *PostgresDetailed) SetVmSize(v string) {
	o.VmSize = v
}

// GetConnectionString returns the ConnectionString field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PostgresDetailed) GetConnectionString() string {
	if o == nil || o.ConnectionString.Get() == nil {
		var ret string
		return ret
	}

	return *o.ConnectionString.Get()
}

// GetConnectionStringOk returns a tuple with the ConnectionString field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostgresDetailed) GetConnectionStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionString.Get(), o.ConnectionString.IsSet()
}

// SetConnectionString sets field value
func (o *PostgresDetailed) SetConnectionString(v string) {
	o.ConnectionString.Set(&v)
}

// GetEarliestRestoreTime returns the EarliestRestoreTime field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PostgresDetailed) GetEarliestRestoreTime() string {
	if o == nil || o.EarliestRestoreTime.Get() == nil {
		var ret string
		return ret
	}

	return *o.EarliestRestoreTime.Get()
}

// GetEarliestRestoreTimeOk returns a tuple with the EarliestRestoreTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostgresDetailed) GetEarliestRestoreTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EarliestRestoreTime.Get(), o.EarliestRestoreTime.IsSet()
}

// SetEarliestRestoreTime sets field value
func (o *PostgresDetailed) SetEarliestRestoreTime(v string) {
	o.EarliestRestoreTime.Set(&v)
}

// GetFirewallRules returns the FirewallRules field value
func (o *PostgresDetailed) GetFirewallRules() []PostgresFirewallRule {
	if o == nil {
		var ret []PostgresFirewallRule
		return ret
	}

	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetFirewallRulesOk() ([]PostgresFirewallRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirewallRules, true
}

// SetFirewallRules sets field value
func (o *PostgresDetailed) SetFirewallRules(v []PostgresFirewallRule) {
	o.FirewallRules = v
}

// GetLatestRestoreTime returns the LatestRestoreTime field value
func (o *PostgresDetailed) GetLatestRestoreTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LatestRestoreTime
}

// GetLatestRestoreTimeOk returns a tuple with the LatestRestoreTime field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetLatestRestoreTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestRestoreTime, true
}

// SetLatestRestoreTime sets field value
func (o *PostgresDetailed) SetLatestRestoreTime(v string) {
	o.LatestRestoreTime = v
}

// GetPrimary returns the Primary field value
func (o *PostgresDetailed) GetPrimary() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value
// and a boolean to check if the value has been set.
func (o *PostgresDetailed) GetPrimaryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Primary, true
}

// SetPrimary sets field value
func (o *PostgresDetailed) SetPrimary(v bool) {
	o.Primary = v
}

func (o PostgresDetailed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostgresDetailed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["flavor"] = o.Flavor
	toSerialize["ha_type"] = o.HaType
	toSerialize["id"] = o.Id
	toSerialize["location"] = o.Location
	toSerialize["name"] = o.Name
	toSerialize["state"] = o.State
	toSerialize["storage_size_gib"] = o.StorageSizeGib
	toSerialize["version"] = o.Version
	toSerialize["vm_size"] = o.VmSize
	toSerialize["connection_string"] = o.ConnectionString.Get()
	toSerialize["earliest_restore_time"] = o.EarliestRestoreTime.Get()
	toSerialize["firewall_rules"] = o.FirewallRules
	toSerialize["latest_restore_time"] = o.LatestRestoreTime
	toSerialize["primary"] = o.Primary
	return toSerialize, nil
}

type NullablePostgresDetailed struct {
	value *PostgresDetailed
	isSet bool
}

func (v NullablePostgresDetailed) Get() *PostgresDetailed {
	return v.value
}

func (v *NullablePostgresDetailed) Set(val *PostgresDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresDetailed(val *PostgresDetailed) *NullablePostgresDetailed {
	return &NullablePostgresDetailed{value: val, isSet: true}
}

func (v NullablePostgresDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


