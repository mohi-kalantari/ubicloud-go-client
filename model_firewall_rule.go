/*
Clover API

API for managing resources on Ubicloud

API version: 0.1.0
Contact: support@ubicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FirewallRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallRule{}

// FirewallRule struct for FirewallRule
type FirewallRule struct {
	// CIDR of the firewall rule
	Cidr string `json:"cidr"`
	// ID of the firewall rule
	Id string `json:"id"`
	// Port range of the firewall rule
	PortRange string `json:"port_range"`
}

// NewFirewallRule instantiates a new FirewallRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRule(cidr string, id string, portRange string) *FirewallRule {
	this := FirewallRule{}
	this.Cidr = cidr
	this.Id = id
	this.PortRange = portRange
	return &this
}

// NewFirewallRuleWithDefaults instantiates a new FirewallRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleWithDefaults() *FirewallRule {
	this := FirewallRule{}
	return &this
}

// GetCidr returns the Cidr field value
func (o *FirewallRule) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *FirewallRule) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *FirewallRule) SetCidr(v string) {
	o.Cidr = v
}

// GetId returns the Id field value
func (o *FirewallRule) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FirewallRule) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FirewallRule) SetId(v string) {
	o.Id = v
}

// GetPortRange returns the PortRange field value
func (o *FirewallRule) GetPortRange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PortRange
}

// GetPortRangeOk returns a tuple with the PortRange field value
// and a boolean to check if the value has been set.
func (o *FirewallRule) GetPortRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortRange, true
}

// SetPortRange sets field value
func (o *FirewallRule) SetPortRange(v string) {
	o.PortRange = v
}

func (o FirewallRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cidr"] = o.Cidr
	toSerialize["id"] = o.Id
	toSerialize["port_range"] = o.PortRange
	return toSerialize, nil
}

type NullableFirewallRule struct {
	value *FirewallRule
	isSet bool
}

func (v NullableFirewallRule) Get() *FirewallRule {
	return v.value
}

func (v *NullableFirewallRule) Set(val *FirewallRule) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRule) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRule(val *FirewallRule) *NullableFirewallRule {
	return &NullableFirewallRule{value: val, isSet: true}
}

func (v NullableFirewallRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


